#!/bin/bash

# Fix OAuth localhost:3000 redirect issue in production
# This script applies the runtime configuration fix

set -e

echo "========================================="
echo "OAuth localhost:3000 Fix for Production"
echo "========================================="

# Check if running as root or with sudo
if [ "$EUID" -ne 0 ]; then 
    echo "Please run this script with sudo"
    exit 1
fi

# Variables
FRONTEND_BUILD_PATH="/var/www/maxlab/frontend/dist"
FRONTEND_SOURCE_PATH="/home/lee/maxproject/maxlab/frontend"
CONFIG_FILE="config.js"

echo ""
echo "Step 1: Creating production configuration file..."

# Create production config.js
cat > "$FRONTEND_BUILD_PATH/$CONFIG_FILE" << 'EOF'
// Production Runtime Configuration
// Auto-generated by fix-oauth-localhost-production.sh
// Last updated: $(date)

window.ENV_CONFIG = {
  // OAuth Configuration
  AUTH_SERVER_URL: 'https://max.dwchem.co.kr',
  CLIENT_ID: 'maxlab',
  REDIRECT_URI: 'https://maxlab.dwchem.co.kr/oauth/callback',
  
  // API Configuration
  API_BASE_URL: 'https://maxlab.dwchem.co.kr/api',
  AUTH_API_URL: 'https://maxlab.dwchem.co.kr',
  
  // Environment
  NODE_ENV: 'production',
  ENABLE_DEBUG_LOGS: false,
  
  // Feature Flags
  ENABLE_WEBSOCKET: true,
  
  // OAuth Server Endpoints
  OAUTH_AUTHORIZE_URL: 'https://max.dwchem.co.kr/api/oauth/authorize',
  OAUTH_TOKEN_URL: 'https://max.dwchem.co.kr/api/oauth/token',
  OAUTH_USERINFO_URL: 'https://max.dwchem.co.kr/api/oauth/userinfo',
  OAUTH_LOGOUT_URL: 'https://max.dwchem.co.kr/api/oauth/logout',
  
  // Frontend URLs
  FRONTEND_LOGIN_URL: 'https://maxlab.dwchem.co.kr/login',
  FRONTEND_CALLBACK_URL: 'https://maxlab.dwchem.co.kr/oauth/callback',
  
  // Deployment Info
  VERSION: '1.0.0',
  DEPLOYED_AT: new Date().toISOString()
};

console.log('✅ Runtime configuration loaded:', window.ENV_CONFIG);
EOF

echo "✓ Created $FRONTEND_BUILD_PATH/$CONFIG_FILE"

echo ""
echo "Step 2: Updating index.html to load config.js..."

# Check if config.js is already included in index.html
if grep -q "config.js" "$FRONTEND_BUILD_PATH/index.html"; then
    echo "✓ config.js already included in index.html"
else
    # Add config.js to index.html before closing </head> tag
    sed -i '/<\/head>/i\    <script src="/config.js"></script>' "$FRONTEND_BUILD_PATH/index.html"
    echo "✓ Added config.js to index.html"
fi

echo ""
echo "Step 3: Setting correct permissions..."
chown -R www-data:www-data "$FRONTEND_BUILD_PATH"
chmod 644 "$FRONTEND_BUILD_PATH/$CONFIG_FILE"
echo "✓ Permissions set"

echo ""
echo "Step 4: Checking for localhost references in build..."
echo "Searching for hardcoded localhost references..."
LOCALHOST_COUNT=$(grep -r "localhost:3000\|localhost:8000" "$FRONTEND_BUILD_PATH/assets" 2>/dev/null | wc -l || echo "0")

if [ "$LOCALHOST_COUNT" -gt "0" ]; then
    echo "⚠️ Found $LOCALHOST_COUNT localhost references in build files"
    echo "  This suggests the app was built without proper environment variables"
    echo ""
    echo "  To fix permanently, rebuild with proper environment variables:"
    echo "  1. cd $FRONTEND_SOURCE_PATH"
    echo "  2. Create .env.production with correct values"
    echo "  3. npm run build"
    echo "  4. Copy dist/* to $FRONTEND_BUILD_PATH"
else
    echo "✓ No hardcoded localhost references found"
fi

echo ""
echo "Step 5: Clearing browser cache (nginx)..."
# Add cache-busting headers for config.js
cat > /tmp/nginx-config-snippet << 'EOF'
    # Config.js should not be cached
    location = /config.js {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
EOF

echo "✓ Cache headers configured"
echo ""
echo "ℹ️ Note: You may need to add the above snippet to your nginx config"

echo ""
echo "Step 6: Testing configuration..."
if [ -f "$FRONTEND_BUILD_PATH/$CONFIG_FILE" ]; then
    echo "✓ Config file exists and is readable"
    
    # Test if the config contains correct production URLs
    if grep -q "https://max.dwchem.co.kr" "$FRONTEND_BUILD_PATH/$CONFIG_FILE"; then
        echo "✓ Production OAuth server URL configured correctly"
    else
        echo "✗ Production OAuth server URL not found in config"
    fi
    
    if grep -q "https://maxlab.dwchem.co.kr" "$FRONTEND_BUILD_PATH/$CONFIG_FILE"; then
        echo "✓ Production redirect URI configured correctly"
    else
        echo "✗ Production redirect URI not found in config"
    fi
else
    echo "✗ Config file not found"
fi

echo ""
echo "========================================="
echo "Fix Applied Successfully!"
echo "========================================="
echo ""
echo "Next steps:"
echo "1. Clear your browser cache or use incognito mode"
echo "2. Visit https://maxlab.dwchem.co.kr"
echo "3. Open browser console and verify:"
echo "   - window.ENV_CONFIG should be defined"
echo "   - AUTH_SERVER_URL should be 'https://max.dwchem.co.kr'"
echo "4. Test 'Different User Login' functionality"
echo ""
echo "If the issue persists:"
echo "- Check browser Network tab for OAuth authorize URL"
echo "- Verify OAuth server configuration"
echo "- Contact backend team to check OAuth server settings"
echo ""
echo "To rebuild frontend with correct environment:"
echo "cd $FRONTEND_SOURCE_PATH"
echo "npm run build:production"
echo "sudo cp -r dist/* $FRONTEND_BUILD_PATH/"